{
  "swagger": "2.0",
  "info": {
    "title": "TraveloAPI",
    "version": "v1"
  },
  "paths": {
    "/api/Alerts/GET/ALL": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertDto"
              }
            }
          }
        }
      }
    },
    "/api/Countries/GET/COUNTRIES/SEARCH": {
      "get": {
        "tags": [
          "Countries"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "phrase",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCountriesNamesRequestDto"
              }
            }
          }
        }
      }
    },
    "/SystemNotifications/GET/ALL": {
      "get": {
        "tags": [
          "SystemNotifications"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SystemNotificationsDto"
              }
            }
          }
        }
      }
    },
    "/api/Travels/GET/ALL": {
      "get": {
        "tags": [
          "Travels"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllTravelsDTO"
              }
            }
          }
        }
      }
    },
    "/api/Travels/ADD": {
      "post": {
        "tags": [
          "Travels"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddNewTravelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Travels/GET/TRAVELS/DATES": {
      "get": {
        "tags": [
          "Travels"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTravelDatesFromCurrentMonthDto"
              }
            }
          }
        }
      }
    },
    "/api/Travels/DASHBOARD/GET/TRAVEL": {
      "get": {
        "tags": [
          "Travels"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCurrentTravelInformationDto"
            }
          }
        }
      }
    },
    "/api/Travels/CALENDAR/GET/DATES": {
      "get": {
        "tags": [
          "Travels"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTravelDatesFromCurrentMonthDto"
              }
            }
          }
        }
      }
    },
    "/api/User/HEALTH": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/GET/DETAILS": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserNoIDDTO"
            }
          }
        }
      }
    },
    "/api/User/ADD": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/RefreshPasswordGet": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefreshPasswordGetDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HttpStatusCode"
            }
          }
        }
      }
    },
    "/api/User/RefreshPasswordSet": {
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefreshPasswordCommandRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HttpStatusCode"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AlertDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "validDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetCountriesNamesRequestDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "SystemNotificationsDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "AllTravelsDTO": {
      "type": "object",
      "properties": {
        "travelId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      }
    },
    "AddOweSinglePaymentDto": {
      "type": "object",
      "properties": {
        "personName": {
          "type": "string"
        },
        "paymentAmount": {
          "format": "double",
          "type": "number"
        },
        "paymentStatus": {
          "type": "boolean"
        },
        "paymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPayer": {
          "type": "boolean"
        }
      }
    },
    "AddExpenseDto": {
      "type": "object",
      "properties": {
        "cost": {
          "format": "double",
          "type": "number"
        },
        "singlePayment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOweSinglePaymentDto"
          }
        }
      }
    },
    "AddSpotDto": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "street": {
          "type": "string"
        },
        "buildingNo": {
          "type": "string"
        },
        "flatNo": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "expense": {
          "$ref": "#/definitions/AddExpenseDto"
        }
      }
    },
    "AddVisitDateDto": {
      "type": "object",
      "properties": {
        "visitDate": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "spots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddSpotDto"
          }
        }
      }
    },
    "AddNewTravelDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "participatNumber": {
          "format": "int32",
          "type": "integer"
        },
        "plannedBudget": {
          "format": "double",
          "type": "number"
        },
        "countryId": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "format": "int32",
          "type": "integer"
        },
        "visitDate": {
          "$ref": "#/definitions/AddVisitDateDto"
        }
      }
    },
    "GetTravelDatesFromCurrentMonthDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "allDay": {
          "type": "boolean"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Alerts": {
      "type": "object",
      "properties": {
        "alertId": {
          "format": "int32",
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "validDate": {
          "format": "date-time",
          "type": "string"
        },
        "countryId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetCurrentTravelInformationDto": {
      "type": "object",
      "properties": {
        "countryName": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "plannedBudged": {
          "format": "double",
          "type": "number"
        },
        "usedBudget": {
          "format": "double",
          "type": "number"
        },
        "flagUrl": {
          "type": "string"
        },
        "countryAlerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alerts"
          }
        }
      }
    },
    "UserNoIDDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "CreateUserDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RefreshPasswordGetDTO": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "HttpStatusCode": {
      "format": "int32",
      "enum": [
        100,
        101,
        102,
        103,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        226,
        300,
        301,
        302,
        303,
        304,
        305,
        306,
        307,
        308,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        412,
        413,
        414,
        415,
        416,
        417,
        421,
        422,
        423,
        424,
        426,
        428,
        429,
        431,
        451,
        500,
        501,
        502,
        503,
        504,
        505,
        506,
        507,
        508,
        510,
        511
      ],
      "type": "integer"
    },
    "RefreshPasswordCommandRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}